import os
import time
import getpass

#Listas
menu = ["Banco en l√≠nea",
        "Hazte usuario",
        "Crear Contrase√±a",
        "Modo Admin",
        "Salir"
        ]

menu_banco = ["Tranferencia",
              "Ver Monto",
              "Ver Tranferencias.",
              "Ver Usuarios",
              "Solicitar prestamo."
              ]

menu_tranferencia = ["Nuevo destinatario:",
                     "Realizar Tranferencia",
                     "Salir"]

usuarios = []

tranferencias = []


#Variables
passw = None 
passadm = 13344
dinero = 5000000

while True:
    print(r"""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë    BANCO EN L√çNEA üí≥      ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
""")

    for i, op in enumerate(menu):
        print(f"{i + 1}. {op}")

    print("\n")
    userop = input("Seleccione una opci√≥n:\n> ")

    if userop == "1":
        if passw is None:
            print("Primero debe crear una contrase√±a (opci√≥n 3).")
            time.sleep(1)
            os.system("cls")
            continue

        while True:
            rut = input("Ingrese su RUT (9 caracteres):\n> ")
            if len(rut) == 9 or passadm:
                print("RUT v√°lido.")
                while True:
                    passw_n = input("Ingrese su contrase√±a:\n> ")
                    if passw_n == passw or passadm:
                        print("Acceso permitido.")
                        time.sleep(1)
                        os.system("cls")
                        break  # Sale del ciclo contrase√±a
                    else:
                        print("Las contrase√±as no coinciden. Intente de nuevo.")
                break  # Sale del ciclo RUT
            else:
                print("Error!, RUT inv√°lido.")
                
        while True:
            
            print("       *** MENU ***")
            for i, op in enumerate(menu_banco):
                print(f"{i + 1}. {op}")

            print("\n")
            useropbanco = input("Seleccione una opci√≥n:\n> ")
            time.sleep(1)
            os.system("cls")
            
            if useropbanco == "1":
                print("Sistema de tranferencia.")
                for i, op in enumerate(menu_tranferencia):
                    print(f"{i + 1}. {op}")
                    
                print("\n")
                usertranfrencia = input("Seleccione una opci√≥n:\n> ")
                while True:
                    if usertranfrencia == "1":
                        n_destinatario = input("Ingrese el nombre del nuevo destinatario:\n>")
                        if n_destinatario.replace(" ", "").isalpha():
                            print("Nuevo destinatario guardado con √©xito.")
                            nuevo_cliente = {"Nombre": n_destinatario}
                            usuarios.append(nuevo_cliente)
                            break
                        
                        else:
                            print("Error!, Solo puedes ingresar caracteres alfabeticos.")
                            time.sleep(1)
                            os.system("cls")
                            
                    elif usertranfrencia == "2":
                                     # REALIZAR TRANSFERENCIAS
                        if not usuarios:
                            print("‚ö† No hay usuarios registrados para transferencias.")
                            time.sleep(1)


                        print("\nüìã Lista de usuarios disponibles:")
                        for i, op in enumerate(usuarios):
                            print(f" {i + 1}. {op['Nombre']}")  # Accede al campo 'Nombre'

                        print("\n")
                        try:
                            tranfer = int(input("Seleccione al usuario (n√∫mero):\n> "))
                            if 1 <= tranfer <= len(usuarios):
                                destinatario = usuarios[tranfer - 1]
                                print(f"\nüü¢ Usuario seleccionado: {destinatario['Nombre']}")
                                # Aqu√≠ podr√≠as continuar con el ingreso del monto, verificaci√≥n de saldo, etc.
                            else:
                                print("‚ùå Opci√≥n fuera de rango.")
                                time.sleep(1)
                        except ValueError:
                            print("‚ùå Entrada inv√°lida. Debes ingresar un n√∫mero.")
                            time.sleep(1)
                        
                        
                    elif usertranfrencia == "3":
                        print ("Saliendo..")
                        time.sleep(1)
                        os.system("cls")
                        break
                        
                
            elif useropbanco == "2":
                #ver Monto
                print("       *** Cartera. ***")
                print(f"Saldo Disponible: {dinero}")
                input("Presione ENTER para continuar.")
                time.sleep(1)
                os.system("cls")
                break
                
            elif useropbanco == "3":
                #Ver Tranferencias
                pass
            elif useropbanco == "4":
                #Ver usuarios
                for idx,diccionario in enumerate(usuarios):
                    print(f"{idx +1} {diccionario["Nombre"]}")
                    print()
                    input("Presione ENTER para continuar.")
                    time.sleep(1)
                    os.system("cls")
                    
            elif useropbanco == "5":
                #Prestamos.
                pass 
            else:
                print("Error!, Opcion no v√°lida,intente nuevamente\n")
                  
    
                    
                

    elif userop == "2":
        # Aqu√≠ puedes agregar c√≥digo para "Hazte usuario"
        pass

    elif userop == "3":
        while True:
            try:
                print("Bienvenido a Creaci√≥n de contrase√±a.")
                nueva_passw = input("Cree una contrase√±a (6 d√≠gitos):\n> ")
                assert len(nueva_passw) == 6, "La contrase√±a debe tener 6 caracteres"
                int(nueva_passw)  
                passw = nueva_passw  
                print("PIN v√°lido. Contrase√±a guardada.")
                time.sleep(1)
                os.system("cls")
                break
            except AssertionError as e:
                print("Error:", e)
            except ValueError:
                print("Error: Solo debe contener n√∫meros.")

    elif userop == "4":
        os.system('cls' if os.name == 'nt' else 'clear')
        print("\033[92m" + "="*40)
        print("       *** MODO ADMIN ***")
        print("="*40 + "\033[0m")
        time.sleep(0.5)
        print("\033[94mSolicitando credenciales...\033[0m")
        time.sleep(1)

        adm = int(input("\033[93m>> Ingrese contrase√±a de administrador: \033[0m"))

        print("\nVerificando...\n")
        time.sleep(1.5)

        if adm == passadm:
            print("\033[92m‚úî ACCESO CONCEDIDO: MODO ADMIN ACTIVADO ‚úî\033[0m")
            time.sleep(1)
            print("\033[92m> Sistemas internos desbloqueados...\033[0m")
        else:
            print("\033[91m‚úñ ACCESO DENEGADO: CONTRASE√ëA INCORRECTA ‚úñ\033[0m")
            time.sleep(1)
            username = getpass.getuser()
            print(f"\033[91m> Alerta: intento de acceso no autorizado por el usuario: {username}\033[0m")
            time.sleep(2)
            print("\033[91m> Iniciando protocolo de seguridad...\033[0m")
            time.sleep(2)

            for i in range(5):
                print(f"\033[91m> Borrando archivos del sistema ({(i+1)*20}%)...\033[0m")
                time.sleep(0.8)

        print("\033[91m> ERROR: No se pudo completar el borrado.\033[0m")
        time.sleep(1)
        print("\033[93m> Simulaci√≥n finalizada. No se ha producido ning√∫n da√±o real.\033[0m")

    elif userop == "5":
        print("Saliendo....")
        break
    
    else:
        print("Error!, intente nuevamente.")
        time.sleep(1)
        os.system("cls")
